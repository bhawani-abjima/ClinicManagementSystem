@model ClinicManagementSystem.Models.LoginModel

@{
    ViewBag.Title = "Login User";
}

<style>

    .card {
        width: 70%;
        text-align: left;
        border-radius: 45px;
        box-shadow: 0 2px 5px black;
        margin: 40px auto;
    }

    .card-title {
        color: black;
        border-radius: 45px;
        padding: 10px 40px;
        font-size: 25px;
        font-weight: bold;
        margin-bottom: 10px;
        text-align: center;
    }

    .login-button {
        display: flex;
        justify-content: center;
        margin-top: 20px;
        border: none;
    }

        .login-button input[type="submit"] {
            background: linear-gradient(to left, #ff3399 0%, #ff9933 100%);
            padding: 7px 30px;
            font-size: 18px;
            border: none;
            border-radius: 10px;
        }

</style>



<div class="row justify-content-md-center">
    <div class="col-md-5">
        @using (Html.BeginForm("LoginUser", "Login", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="card">
                <div class="card-header">
                    <div class="card-title">Login Portal</div>
                </div>
                <div class="card-body">
                    <div class="form-group">
                        @Html.LabelFor(m => m.L_UserName, "UserName")
                        @Html.TextBoxFor(m => m.L_UserName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.L_UserName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.L_UserEmail, "UserEmail")
                        @Html.TextBoxFor(m => m.L_UserEmail, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.L_UserEmail, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.L_Password, "Password")
                        @Html.PasswordFor(m => m.L_Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.L_Password, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.L_UserType, "UserType")
                        @Html.DropDownListFor(m => m.L_UserType, new SelectList(new[]
                    {
                    new SelectListItem { Text = "Patient", Value = "Patient" },
                    new SelectListItem { Text = "Doctor", Value = "Doctor" },
                    new SelectListItem { Text = "Admin", Value = "Admin" }
                    }, "Value", "Text"), "Select User Type", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.L_UserType, "", new { @class = "badge badge-danger" })
                    </div>
                    <div class="login-button">
                        <input type="submit" name="Login" value="LoginUser" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>