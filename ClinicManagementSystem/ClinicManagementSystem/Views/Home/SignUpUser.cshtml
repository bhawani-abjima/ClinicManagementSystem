@model ClinicManagementSystem.Models.UserModel

@{
    ViewBag.Title = "Sign Up New User";
}

<style>
    .card {
        width: 70%;
        text-align: left;
        border-radius: 45px;
        box-shadow: 0 2px 5px black;
        margin: 40px auto;
    }

    .card-title {
        color: black;
        border-radius: 45px;
        padding: 10px 40px;
        font-size: 25px;
        font-weight: bold;
        margin-bottom: 10px;
        text-align: center;
    }

    .signup-button {
        display: flex;
        justify-content: center;
        margin-top: 20px;
        border: none;
    }

        .signup-button input[type="submit"] {
            background: linear-gradient(to left, #ff3399 0%, #ff9933 100%);
            padding: 7px 30px;
            font-size: 18px;
            border: none;
            border-radius: 10px;
        }
</style>

<script>
    function showAlert() {
        alert("Registration Successful! Please Log in");
    }
</script>

<div class="row justify-content-md-center">
    <div class="col-md-5">
        @using (Html.BeginForm("SignUpUser", "User", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="card">
                <div class="card-header">
                    <div class="card-title"><b>Sign Up</b></div>
                </div>
                <div class="card-body">
                    <div class="form-group">
                        @Html.LabelFor(m => m.UserName)
                        @Html.TextBoxFor(m => m.UserName, "", new { @class = "form-control", @placeholder = "UserName" })
                        @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "badge badge-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.UserEmail)
                        @Html.TextBoxFor(m => m.UserEmail, "", new { @class = "form-control", @placeholder = "UserEmail" })
                        @Html.ValidationMessageFor(m => m.UserEmail, "", new { @class = "badge badge-danger" })
                        @if (ViewBag.error != null)
                        {
                            <span class="badge badge-danger">@ViewBag.error</span>
                        }
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Password)
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "badge badge-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.UserType)
                        @Html.DropDownListFor(m => m.UserType, new SelectList(new[]
                    {
                    new SelectListItem { Text = "Patient", Value = "Patient" },
                    new SelectListItem { Text = "Doctor", Value = "Doctor" },
                    new SelectListItem { Text = "Admin", Value = "Admin" }
                    }, "Value", "Text"), "Select User Type", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.UserType, "", new { @class = "badge badge-danger" })
                    </div>
                    <div class="signup-button">
                        <input type="submit" name="SignUp" class="btn btn-danger" value="SignUpUser" onclick="showAlert()" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>
